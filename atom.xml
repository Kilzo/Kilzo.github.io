<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kilzo的小屋</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-26T06:55:25.609Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Kilzo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于hexo博客插入图片显示问题</title>
    <link href="http://example.com/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E5%8D%9A%E5%AE%A2%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2021-07-26T07:32:42.434Z</published>
    <updated>2021-07-26T06:55:25.609Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="关于hexo博客插入图片显示问题"><a href="#关于hexo博客插入图片显示问题" class="headerlink" title="关于hexo博客插入图片显示问题"></a>关于hexo博客插入图片显示问题</h1><blockquote><p>踩坑日记，今天又学到新东西了。</p></blockquote><p>首先<br>1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p><p>2 在你的hexo目录下git bush <code>npm install hexo-asset-image --save</code>，下载安装一个可以上传本地图片的插件.</p><p>3 安装完后，再运行hexo n “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹(也可以手动在该目录下添加，但是md文件的title什么的要自己添加)</p><p>然后<br>4 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p><p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p><p>注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p><p>5 最后检查一下，hexo g生成页面后，进入public\2017\02\26\index.html文件中查看相关字段，可以发现，html标签内的语句是<code>&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;</code>，而不是<code>&lt;img src=&quot;xxxx/图片名.jpg&gt;</code>。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p><p>做到这可能就出问题了，解决办法如下：</p><p>由于<code>hexo</code>默认无法自动处理文章插入本地图片，需要通过扩展插件支持。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>由于hexo 3 版本后对很多插件支持有问题，<a href="https://github.com/CodeFalling/hexo-asset-image.git">hexo-asset-image</a>插件在处理<code>data.permalink</code>链接时出现路径错误，把年月去掉了，导致最后生成的路径为<code>%d/xxx/xxx</code>需要对其做兼容处理。通过判断当前版本是否等于<code>3</code>的版本做不同的路径分割。</p><p>解决方法：(任意一种应该都能解决)</p><p><strong>1</strong>.可直接安装已经修改过得插件<code>npm install https://github.com/7ym0n/hexo-asset-image --sa</code>。</p><p><strong>2</strong>.找到node_modules 中的 hexo-asset-image，打开修改js文件，推荐跳到最后一行直接安装</p><p>在代码中加入：(推荐学习Ctrl + F 搜索快捷键快速定位)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br></pre></td></tr></table></figure><p>修改<code>date.permalink</code>处理：</p><p>（这一步可能是不需要的）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> link = data.permalink;  </span><br><span class="line"><span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>) </span><br><span class="line">    <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>重新生成静态文件即可正确显示。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于hexo的备份</title>
    <link href="http://example.com/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E5%A4%87%E4%BB%BD/"/>
    <id>http://example.com/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E5%A4%87%E4%BB%BD/</id>
    <published>2021-07-25T16:00:00.000Z</published>
    <updated>2021-07-26T07:27:16.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇主要是为了本人哪天电脑炸了博客恢复而记录的，如果给您带来了一定指示作用也是令人高兴的一件事，本篇可能部分材料有从他处摘抄，如果侵权(这里不提出从何处引用是因为网上相同内容的太多了，出处不可究)，麻烦联系我删除。谢谢！同时，我尽量写的清楚明白让看到的读者接受。</p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p><strong>目的</strong>：针对博客已经搭建并发布过文章的或者是搭建未发布文章的。</p><p>1、在你的博客仓库（GitHub）创建一个分支Hexo（这个命名随意）；</p><p>2、设置Hexo为默认分支（default）（不知道怎么设的可以百度，建议自己摸索，弄明白GitHub的使用）；<strong>同时底部也给出了创建分支的方法</strong>。</p><p>3、将博客仓库clone至本地(<code>git clone git@github.com:XXXXX/XXXXX.github.io.git </code>) ，将之前的Hexo文件夹中的<br> <code>_config.yml</code>，<code>themes/</code>，<code>source</code>，<code>scffolds/</code>，<code>package.json</code>，<code>.gitignore</code>复制到你克隆下来的仓库文件夹，即Username.github.io；（Username是你自己的用户名）</p><p>4、将themes/next/中的<code>.git/</code>删除，否则无法将主题文件夹push；</p><p>5、在Username.github.io；文件夹执行<code>npm install</code>，<code>npm install hexo-deployer-git</code>(这里可以看看分支是不是显示为Hexo)</p><p><img src="/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E5%A4%87%E4%BB%BD/1.jpg" alt="1" loading="lazy"></p><p>6、执行<code>git add .</code>，<code>git commit -m &quot;提交文件&quot;</code>，<code>git push origin Hexo</code>来提交Hexo网站源文件；</p><blockquote><p><strong>注意</strong>：</p><p><img src="/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E5%A4%87%E4%BB%BD/2.jpg" alt="2" loading="lazy"></p></blockquote><p>7、执行hexo g -d 生成静态网页部署到github上。<br> 这样，<a href="https://links.jianshu.com/go?to=https://olivivian.github.io/">Username.github.io</a>仓库就有master分支保存静态网页，hexo分支保存源文件。</p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>在本地对博客修改（包括修改主题样式、发布新文章等）后</p><p>1、执行<code>git add</code>，<code>git commit -m &quot;提交文件&quot;</code>，<code>git push origin Hexo</code>来提交Hexo网站源文件；</p><p>2、执行hexo g -d 生成静态网页部署到github上；<br> （每次发布重复这两步，它们之间没有严格的顺序）</p><h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p>换电脑想改博客：<br> 1、安装git；<br> 2、安装Nodejs和npm；<br> 3、使用克隆命令将仓库拷贝至本地；<br> 4、在文件夹内执行命令<code>npm install hexo-cli -g</code>、<code>npm install</code>、<code>npm install hexo-deployer-git</code>；</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>在github上直接创建分支的方法，直接输入新的分支名，回车即可。</p><p><img src="/2021/07/26/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E5%A4%87%E4%BB%BD/3.jpg" alt="3" loading="lazy"></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>这里稍作说明：</p><h5 id="添加ssh-keys"><a href="#添加ssh-keys" class="headerlink" title="添加ssh-keys"></a>添加ssh-keys</h5><ol><li>在终端下运行：<code>ssh-keygen -t rsa -C &quot;yourname@email.com&quot;</code>，一路回车；</li><li>会在.ssh目录生成<code>id_rsa</code>、<code>id_rsa.pub</code>两个文件，这就是密钥对，id_rsa是私钥，千万不能泄漏出去；</li><li>登录Github，打开「Settings」–&gt;「SSH and GPG keys」，然后点击「new SSH key」，填上任意Title，在Key文本框里粘贴公钥id_rsa.pub文件的内容，注意不要粘贴成<code>id_rsa</code>，最后点击「Add SSH Key」。</li></ol><h5 id="hexo的源文件"><a href="#hexo的源文件" class="headerlink" title="hexo的源文件"></a>hexo的源文件</h5><p>这里说一下步骤4为什么只需要拷贝6个，而不需要全部：</p><ol><li><code>_config.yml</code>站点的配置文件，需要拷贝；</li><li><code>themes/</code>主题文件夹，需要拷贝；</li><li><code>source</code>博客文章的.md文件，需要拷贝；</li><li><code>scaffolds/</code>文章的模板，需要拷贝；</li><li><code>package.json</code>安装包的名称，需要拷贝；</li><li><code>.gitignore</code>限定在push时哪些文件可以忽略，需要拷贝；</li><li><code>.git/</code>主题和站点都有，标志这是一个git项目，不需要拷贝；</li><li><code>node_modules/</code>是安装包的目录，在执行<code>npm install</code>的时候会重新生成，不需要拷贝；</li><li><code>public</code>是<code>hexo g</code>生成的静态网页，不需要拷贝；</li><li><code>.deploy_git</code>同上，<code>hexo g</code>也会生成，不需要拷贝；</li><li><code>db.json</code>文件，不需要拷贝。</li></ol><p>其实不需要拷贝的文件正是<code>.gitignore</code>中所忽略的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
